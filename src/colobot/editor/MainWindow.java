/*
 * Copyright (c) 2013 Tomasz Kapuściński
 */
package colobot.editor;

import colobot.editor.file.MapExporter;
import colobot.editor.file.MapImporter;
import colobot.editor.map.ColobotObject;
import colobot.editor.map.GeneralInfo;
import colobot.editor.map.GeneralInfo.Language;
import colobot.editor.map.Map;
import colobot.editor.map.MapSource;
import colobot.editor.map.Objects;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 * This class represents main window of Colobot Map Editor.
 * @author Tomasz Kapuściński tomaszkax86@gmail.com
 */
public class MainWindow extends javax.swing.JFrame implements MapSource
{
    private File file = null;
    private Map map = null;
    private ColobotObject selectedObject = null;
    private ColobotObject templateObject = null;
    
    // dragging map
    private boolean dragging = false;
    private int startX = 0, startY = 0;
    private double startCenterX = 0, startCenterY = 0;
    
    /**
     * Creates new window.
     */
    public MainWindow()
    {
        initComponents();
        
        mapDisplay.setMapSource(this);
    }
    
    @Override
    public Map getMap()
    {
        return map;
    }
    
    public void repaintMap()
    {
        mapDisplay.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        filenameLabel = new javax.swing.JLabel();
        filenameField = new javax.swing.JTextField();
        languageLetter = new javax.swing.JTextField();
        languageLabel = new javax.swing.JLabel();
        languageSelection = new javax.swing.JComboBox();
        languageTitle = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        languageDescription = new javax.swing.JTextArea();
        instructionsField = new javax.swing.JTextField();
        satelliteField = new javax.swing.JTextField();
        loadingField = new javax.swing.JTextField();
        solutionField = new javax.swing.JTextField();
        helpfileField = new javax.swing.JTextField();
        instructionsLabel = new javax.swing.JLabel();
        satelliteLabel = new javax.swing.JLabel();
        houstonLabel = new javax.swing.JLabel();
        solutionLabel = new javax.swing.JLabel();
        helpfileLabel = new javax.swing.JLabel();
        audioTrackField = new javax.swing.JTextField();
        audioTrackLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel6 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        objectAttributesTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        objectListTable = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        mapDisplay = new colobot.editor.MapDisplay();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        filenameLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        filenameLabel.setText("Filename:");

        filenameField.setEditable(false);

        languageLetter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                languageLetterFocusLost(evt);
            }
        });

        languageLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        languageLabel.setText("Language:");

        languageSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        languageSelection.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                languageSelectionItemStateChanged(evt);
            }
        });

        languageTitle.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                languageTitleFocusLost(evt);
            }
        });

        languageDescription.setColumns(20);
        languageDescription.setRows(5);
        languageDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                languageDescriptionFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(languageDescription);

        instructionsField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                instructionsFieldFocusLost(evt);
            }
        });

        satelliteField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                satelliteFieldFocusLost(evt);
            }
        });

        loadingField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                loadingFieldFocusLost(evt);
            }
        });

        solutionField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                solutionFieldFocusLost(evt);
            }
        });

        helpfileField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                helpfileFieldFocusLost(evt);
            }
        });

        instructionsLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        instructionsLabel.setText("Instructions:");

        satelliteLabel.setText("Satellite info:");

        houstonLabel.setText("Houston programs:");

        solutionLabel.setText("Solution file:");

        helpfileLabel.setText("CBot manual:");

        audioTrackField.setText("0");
        audioTrackField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                audioTrackFieldFocusLost(evt);
            }
        });

        audioTrackLabel.setText("Audio track:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(languageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filenameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instructionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(satelliteLabel)
                    .addComponent(houstonLabel)
                    .addComponent(solutionLabel)
                    .addComponent(helpfileLabel)
                    .addComponent(audioTrackLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(instructionsField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(languageSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(languageLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(languageTitle))
                        .addComponent(filenameField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(satelliteField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadingField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solutionField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(helpfileField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(audioTrackField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(455, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filenameLabel)
                    .addComponent(filenameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(languageLabel)
                    .addComponent(languageSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(languageLetter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(languageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(instructionsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instructionsLabel))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(satelliteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(satelliteLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(houstonLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(solutionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solutionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(helpfileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(helpfileLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(audioTrackField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(audioTrackLabel))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("General", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Graphics", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Terrain", jPanel4);

        jTabbedPane2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane2.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane2.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jButton6.setText("Null");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setText("Template");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("Clone");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8)
                .addGap(0, 390, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Tools", jPanel6);

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Bots", jPanel7);

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Buildings", jPanel8);

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Insects", jPanel9);

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Wrecks", jPanel10);

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 98, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 471, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Other", jPanel11);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        objectAttributesTable.setModel(ColobotObject.getEmptyTableModel());
        jScrollPane2.setViewportView(objectAttributesTable);

        jButton1.setText("Delete object");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update object");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Add attribute");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Remove attribute");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        objectListTable.setModel(Objects.getEmptyTableModel());
        objectListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                objectListTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(objectListTable);

        jButton5.setText("Center object");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane3)
        );

        mapDisplay.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                mapDisplayMouseWheelMoved(evt);
            }
        });
        mapDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                mapDisplayMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mapDisplayMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                mapDisplayMousePressed(evt);
            }
        });
        mapDisplay.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                mapDisplayMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mapDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(mapDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Objects", jPanel5);

        jMenu1.setText("File");

        jMenuItem1.setText("New");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Open");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Save");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Save as...");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem7.setText("Close");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);
        jMenu1.add(jSeparator1);

        jMenuItem5.setText("Exit");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem6.setText("Load relief");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadInfo()
    {
        loadGeneralInfo();
        loadObjects();
    }
    
    private void loadGeneralInfo()
    {
        // load file name path
        if(file == null)
            filenameField.setText(null);
        else
            filenameField.setText(file.getName());
        
        if(map == null) return;
        
        // load language info from map
        loadLanguageInfo();
        
        GeneralInfo gi = map.getGeneralInfo();
        
        // load instructions
        instructionsField.setText(gi.getInstructions());
        
        // load satellite info
        satelliteField.setText(gi.getSatellite());
        
        // load Houston programs
        loadingField.setText(gi.getLoadingFile());
        
        // load solution file
        solutionField.setText(gi.getSolutionFile());
        
        // load CBot manual file
        helpfileField.setText(gi.getHelpFile());
    }
    
    private void loadObjects()
    {
        Objects objects = map.getObjects();
        
        objectAttributesTable.setModel(ColobotObject.getEmptyTableModel());
    }
    
    private void loadLanguageInfo()
    {
        int index = languageSelection.getSelectedIndex();
        
        GeneralInfo gi = map.getGeneralInfo();
        Language language = gi.getLanguage(index);
        
        char c = language.getLetter();
        String letter = c > 0 ? Character.toString(c) : "";
        String title = language.getTitle();
        String description = language.getDescription();
        
        languageLetter.setText(letter);
        languageTitle.setText(title);
        languageDescription.setText(description);
    }
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // File->Open
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        if(result != JFileChooser.APPROVE_OPTION) return;
        
        Map newMap = new Map();
        
        MapImporter importer = MapImporter.getInstance("original");
        File newFile = fileChooser.getSelectedFile();
        
        try(BufferedReader reader = new BufferedReader(new FileReader(newFile)))
        {
            importer.importMap(reader, newMap);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error loading map");
            return;
        }
        
        map = newMap;
        
        objectListTable.setModel(map.getObjects().getTableModel());
        
        languageSelection.setSelectedIndex(0);
        loadInfo();
        revalidateTables();
        repaintMap();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // File->New
        map = new Map();
        
        objectListTable.setModel(map.getObjects().getTableModel());
        
        languageSelection.setSelectedIndex(0);
        loadInfo();
        revalidateTables();
        repaintMap();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void helpfileFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_helpfileFieldFocusLost
        if(map == null) return;

        map.getGeneralInfo().setHelpFile(helpfileField.getText());
    }//GEN-LAST:event_helpfileFieldFocusLost

    private void solutionFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_solutionFieldFocusLost
        if(map == null) return;

        map.getGeneralInfo().setSolutionFile(solutionField.getText());
    }//GEN-LAST:event_solutionFieldFocusLost

    private void loadingFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_loadingFieldFocusLost
        if(map == null) return;

        map.getGeneralInfo().setLoadingFile(loadingField.getText());
    }//GEN-LAST:event_loadingFieldFocusLost

    private void satelliteFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_satelliteFieldFocusLost
        if(map == null) return;

        map.getGeneralInfo().setSatellite(satelliteField.getText());
    }//GEN-LAST:event_satelliteFieldFocusLost

    private void instructionsFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_instructionsFieldFocusLost
        if(map == null) return;

        map.getGeneralInfo().setInstructions(instructionsField.getText());
    }//GEN-LAST:event_instructionsFieldFocusLost

    private void languageDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_languageDescriptionFocusLost
        if(map == null) return;

        int index = languageSelection.getSelectedIndex();
        String title = languageDescription.getText();

        map.getGeneralInfo().getLanguage(index).setDescription(title);
    }//GEN-LAST:event_languageDescriptionFocusLost

    private void languageTitleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_languageTitleFocusLost
        if(map == null) return;

        int index = languageSelection.getSelectedIndex();
        String title = languageTitle.getText();

        map.getGeneralInfo().getLanguage(index).setTitle(title);
    }//GEN-LAST:event_languageTitleFocusLost

    private void languageSelectionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_languageSelectionItemStateChanged
        if(map == null) return;

        loadLanguageInfo();
    }//GEN-LAST:event_languageSelectionItemStateChanged

    private void languageLetterFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_languageLetterFocusLost
        if(map == null) return;

        int index = languageSelection.getSelectedIndex();
        String text = languageLetter.getText();
        char letter = text.length() > 0 ? text.charAt(0) : '\0';

        map.getGeneralInfo().getLanguage(index).setLetter(letter);
    }//GEN-LAST:event_languageLetterFocusLost

    private void audioTrackFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_audioTrackFieldFocusLost
        if(map == null) return;
        
        try
        {
            int track = Integer.parseInt(audioTrackField.getText());
            
            map.getGeneralInfo().setAudioTrack(track);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Invalid number");
        }
    }//GEN-LAST:event_audioTrackFieldFocusLost

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // File->Save
        saveAs(file);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // File->Save as...
        saveAs(null);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    // save as
    private void saveAs(File file)
    {
        if(map == null) return;
        
        if(file == null)
        {
            JFileChooser fileChooser = new JFileChooser();
            int result = fileChooser.showSaveDialog(this);
            if(result != JFileChooser.APPROVE_OPTION) return;
            
            file = fileChooser.getSelectedFile();
        }
        
        try(BufferedWriter writer = new BufferedWriter(new FileWriter(file)))
        {
            MapExporter exporter = MapExporter.getInstance("original");
            
            exporter.exportMap(writer, map);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error saving file");
        }
    }
    
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // File->Exit
        System.exit(0);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(selectedObject == null) return;
        
        map.getObjects().remove(selectedObject);
        selectObject(null);
        repaintMap();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(selectedObject == null) return;
        
        try
        {
            selectedObject.update();
            selectObject(selectedObject);
            repaintMap();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Invalid attributes");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if(selectedObject == null) return;
        
        try
        {
            selectedObject.addAttribute("name", "value");
        
            revalidateTables();
        }
        catch(Exception e)
        {
            // NOP
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if(selectedObject == null) return;
        
        int row = objectAttributesTable.getSelectedRow();
        
        try
        {
            selectedObject.removeAttribute(row);
            revalidateTables();
        }
        catch(Exception e)
        {
            // NOP
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void objectListTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_objectListTableMouseClicked
        if(map == null) return;
        
        int index = objectListTable.getSelectedRow();
        if(index == -1) return;
        
        ColobotObject object = map.getObjects().get(index);
        selectObject(object);
        repaintMap();
    }//GEN-LAST:event_objectListTableMouseClicked

    private void mapDisplayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapDisplayMousePressed
        if(evt.getButton() == MouseEvent.BUTTON1)
        {
            dragging = true;
            startX = evt.getX();
            startY = evt.getY();
            startCenterX = mapDisplay.getCenterX();
            startCenterY = mapDisplay.getCenterY();
        }
    }//GEN-LAST:event_mapDisplayMousePressed

    private void mapDisplayMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapDisplayMouseReleased
        if(evt.getButton() == MouseEvent.BUTTON1)
        {
            dragging = false;
        }
    }//GEN-LAST:event_mapDisplayMouseReleased

    private void mapDisplayMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapDisplayMouseDragged
        if(dragging)
        {
            double scale = mapDisplay.getScale();
            double dx = (evt.getX() - startX) / scale;
            double dy = (evt.getY() - startY) / scale;
            
            double x = startCenterX - dx;
            double y = startCenterY + dy;
            
            mapDisplay.setCenter(x, y);
            mapDisplay.repaint();
        }
    }//GEN-LAST:event_mapDisplayMouseDragged

    private void mapDisplayMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_mapDisplayMouseWheelMoved
        double scale = mapDisplay.getScale();
        
        double steps = evt.getPreciseWheelRotation() * 0.5;
        
        mapDisplay.setScale(scale + steps);
        repaintMap();
    }//GEN-LAST:event_mapDisplayMouseWheelMoved

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        if(result != JFileChooser.APPROVE_OPTION) return;
        
        try
        {
            File newFile = fileChooser.getSelectedFile();
            BufferedImage image = ImageIO.read(newFile);
            file = newFile;
            mapDisplay.setHeightMap(image);
            repaintMap();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error loading image file.");
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        if(map == null) return;
        
        file = null;
        map = null;
        selectObject(null);
        objectAttributesTable.setModel(ColobotObject.getEmptyTableModel());
        objectListTable.setModel(Objects.getEmptyTableModel());
        revalidateTables();
        repaint();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if(selectedObject == null) return;
        
        double x = selectedObject.getX();
        double y = selectedObject.getY();
        
        mapDisplay.setCenter(x, y);
        repaintMap();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void mapDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mapDisplayMouseClicked
        if(map == null) return;
        
        if(evt.getButton() == MouseEvent.BUTTON1)
        {
            if(map == null) return;
            if(templateObject == null) return;

            double x = mapDisplay.getMapX(evt.getX());
            double y = mapDisplay.getMapY(evt.getY());

            x = 1e-2 * Math.ceil(x * 1e+2);
            y = 1e-2 * Math.ceil(y * 1e+2);
            
            String pos = Double.toString(x) + ';' + Double.toString(y);

            ColobotObject object = templateObject.clone();

            object.setAttribute("pos", pos);
            object.update();

            map.getObjects().add(object);
            selectObject(object);
            revalidateTables();
            repaintMap();
        }
        else if(evt.getButton() == MouseEvent.BUTTON3)
        {
            ColobotObject object = null;
            
            double x = mapDisplay.getMapX(evt.getX());
            double y = mapDisplay.getMapY(evt.getY());

            for(ColobotObject o : map.getObjects())
            {
                double dx = Math.abs(x - o.getX());
                double dy = Math.abs(y - o.getY());
                double dist = Math.sqrt(dx*dx+dy*dy);

                if(dist < 0.5)
                {
                    if(object == null)
                        object = o;
                }
            }

            selectObject(object);
            repaintMap();
        }
    }//GEN-LAST:event_mapDisplayMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        templateObject = null;
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        templateObject = new ColobotObject("template", 0.0, 0.0, 0.0);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if(selectedObject == null) return;
        
        templateObject = selectedObject.clone();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void revalidateTables()
    {
        if(map != null)
            ((AbstractTableModel) map.getObjects().getTableModel()).fireTableDataChanged();
        
        if(selectedObject != null)
            ((AbstractTableModel) selectedObject.getTableModel()).fireTableDataChanged();
    }
    
    private void selectObject(ColobotObject object)
    {
        selectedObject = object;
        
        if(object == null)
        {
            objectAttributesTable.setModel(ColobotObject.getEmptyTableModel());
            mapDisplay.clearSelection();
        }
        else
        {
            objectAttributesTable.setModel(object.getTableModel());
            mapDisplay.setSelected(object.getX(), object.getY());
        }
        
        revalidateTables();
    }
    
    /**
     * Entry point of Colobot Map Editor
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        /* // tries to set system L&F
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch(Exception e)
        {
            // NOP
        } // */
        
        // deactivated
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } // */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField audioTrackField;
    private javax.swing.JLabel audioTrackLabel;
    private javax.swing.JTextField filenameField;
    private javax.swing.JLabel filenameLabel;
    private javax.swing.JTextField helpfileField;
    private javax.swing.JLabel helpfileLabel;
    private javax.swing.JLabel houstonLabel;
    private javax.swing.JTextField instructionsField;
    private javax.swing.JLabel instructionsLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextArea languageDescription;
    private javax.swing.JLabel languageLabel;
    private javax.swing.JTextField languageLetter;
    private javax.swing.JComboBox languageSelection;
    private javax.swing.JTextField languageTitle;
    private javax.swing.JTextField loadingField;
    private colobot.editor.MapDisplay mapDisplay;
    private javax.swing.JTable objectAttributesTable;
    private javax.swing.JTable objectListTable;
    private javax.swing.JTextField satelliteField;
    private javax.swing.JLabel satelliteLabel;
    private javax.swing.JTextField solutionField;
    private javax.swing.JLabel solutionLabel;
    // End of variables declaration//GEN-END:variables
}
