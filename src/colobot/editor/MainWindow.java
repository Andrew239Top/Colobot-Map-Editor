/*
 * Copyright (c) 2013 Tomasz Kapuściński
 */
package colobot.editor;

import colobot.editor.file.MapExporter;
import colobot.editor.file.MapImporter;
import colobot.editor.map.ColobotObject;
import colobot.editor.map.GeneralInfo;
import colobot.editor.map.GeneralInfo.Language;
import colobot.editor.map.Map;
import colobot.editor.map.MapSource;
import colobot.editor.map.Objects;
import colobot.editor.map.ResearchInfo;
import colobot.editor.map.ResearchInfo.Building;
import colobot.editor.map.ResearchInfo.Research;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import javax.imageio.ImageIO;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

/**
 * This class represents main window of Colobot Map Editor.
 * @author Tomasz Kapuściński tomaszkax86@gmail.com
 */
public class MainWindow extends javax.swing.JFrame implements MapSource
{
    private File file = null;
    private Map map = null;
    private ColobotObject selectedObject = null;
    private ColobotObject templateObject = null;
    
    // dragging map
    private boolean dragging = false;
    private int startX = 0, startY = 0;
    private double startCenterX = 0, startCenterY = 0;
    
    /**
     * Creates new window.
     */
    public MainWindow()
    {
        initComponents();
        
        objectEditorPanel.setMapSource(this);
        
        String path = "D:\\gry\\Colobot Gold\\data\\icons";
        Images.loadImages(new File(path));
        
        objectEditorPanel.loadImages();
    }
    
    @Override
    public Map getMap()
    {
        return map;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        objectEditorContainer = new javax.swing.JPanel();
        objectEditorPanel = new colobot.editor.ObjectEditorPanel();
        jPanel2 = new javax.swing.JPanel();
        filenameLabel = new javax.swing.JLabel();
        filenameField = new javax.swing.JTextField();
        languageLetter = new javax.swing.JTextField();
        languageLabel = new javax.swing.JLabel();
        languageSelection = new javax.swing.JComboBox();
        languageTitle = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        languageDescription = new javax.swing.JTextArea();
        instructionsField = new javax.swing.JTextField();
        satelliteField = new javax.swing.JTextField();
        loadingField = new javax.swing.JTextField();
        solutionField = new javax.swing.JTextField();
        helpfileField = new javax.swing.JTextField();
        instructionsLabel = new javax.swing.JLabel();
        satelliteLabel = new javax.swing.JLabel();
        houstonLabel = new javax.swing.JLabel();
        solutionLabel = new javax.swing.JLabel();
        helpfileLabel = new javax.swing.JLabel();
        audioTrackField = new javax.swing.JTextField();
        audioTrackLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        buildingResearchCenter = new javax.swing.JCheckBox();
        buildingBotFactory = new javax.swing.JCheckBox();
        buildingConverter = new javax.swing.JCheckBox();
        buildingRepairCenter = new javax.swing.JCheckBox();
        buildingDefenseTower = new javax.swing.JCheckBox();
        buildingDerrick = new javax.swing.JCheckBox();
        buildingNuclearPlant = new javax.swing.JCheckBox();
        buildingAutoLab = new javax.swing.JCheckBox();
        buildingPowerCaptor = new javax.swing.JCheckBox();
        buildingExchangePost = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        buildingFlatGround = new javax.swing.JCheckBox();
        buildingFlag = new javax.swing.JCheckBox();
        buildingPowerPlant = new javax.swing.JCheckBox();
        buildingPowerStation = new javax.swing.JCheckBox();
        buildingRadarStation = new javax.swing.JCheckBox();
        jPanel14 = new javax.swing.JPanel();
        trackerLabel = new javax.swing.JLabel();
        trackerEnabled = new javax.swing.JCheckBox();
        trackerDone = new javax.swing.JCheckBox();
        wingerLabel = new javax.swing.JLabel();
        wingerEnabled = new javax.swing.JCheckBox();
        wingerDone = new javax.swing.JCheckBox();
        thumperEnabled = new javax.swing.JCheckBox();
        shooterEnabled = new javax.swing.JCheckBox();
        towerEnabled = new javax.swing.JCheckBox();
        phazerEnabled = new javax.swing.JCheckBox();
        shielderEnabled = new javax.swing.JCheckBox();
        thumperDone = new javax.swing.JCheckBox();
        shooterDone = new javax.swing.JCheckBox();
        thumperLabel = new javax.swing.JLabel();
        shooterLabel = new javax.swing.JLabel();
        towerLabel = new javax.swing.JLabel();
        towerDone = new javax.swing.JCheckBox();
        phazerDone = new javax.swing.JCheckBox();
        shielderDone = new javax.swing.JCheckBox();
        phazerLabel = new javax.swing.JLabel();
        shielderLabel = new javax.swing.JLabel();
        nuclearEnabled = new javax.swing.JCheckBox();
        nuclearDone = new javax.swing.JCheckBox();
        nuclearLabel = new javax.swing.JLabel();
        leggerLabel = new javax.swing.JLabel();
        leggerEnabled = new javax.swing.JCheckBox();
        leggerDone = new javax.swing.JCheckBox();
        orgaLabel = new javax.swing.JLabel();
        orgaEnabled = new javax.swing.JCheckBox();
        orgaDone = new javax.swing.JCheckBox();
        recyclerLabel = new javax.swing.JLabel();
        recyclerDone = new javax.swing.JCheckBox();
        subberLabel = new javax.swing.JLabel();
        snifferLabel = new javax.swing.JLabel();
        subberDone = new javax.swing.JCheckBox();
        snifferDone = new javax.swing.JCheckBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout objectEditorContainerLayout = new javax.swing.GroupLayout(objectEditorContainer);
        objectEditorContainer.setLayout(objectEditorContainerLayout);
        objectEditorContainerLayout.setHorizontalGroup(
            objectEditorContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(objectEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 978, Short.MAX_VALUE)
        );
        objectEditorContainerLayout.setVerticalGroup(
            objectEditorContainerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(objectEditorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Object editor", objectEditorContainer);

        filenameLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        filenameLabel.setText("Filename:");

        filenameField.setEditable(false);

        languageLetter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                languageLetterFocusLost(evt);
            }
        });

        languageLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        languageLabel.setText("Language:");

        languageSelection.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4" }));
        languageSelection.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                languageSelectionItemStateChanged(evt);
            }
        });

        languageTitle.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                languageTitleFocusLost(evt);
            }
        });

        languageDescription.setColumns(20);
        languageDescription.setRows(5);
        languageDescription.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                languageDescriptionFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(languageDescription);

        instructionsField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                instructionsFieldFocusLost(evt);
            }
        });

        satelliteField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                satelliteFieldFocusLost(evt);
            }
        });

        loadingField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                loadingFieldFocusLost(evt);
            }
        });

        solutionField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                solutionFieldFocusLost(evt);
            }
        });

        helpfileField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                helpfileFieldFocusLost(evt);
            }
        });

        instructionsLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        instructionsLabel.setText("Instructions:");

        satelliteLabel.setText("Satellite info:");

        houstonLabel.setText("Houston programs:");

        solutionLabel.setText("Solution file:");

        helpfileLabel.setText("CBot manual:");

        audioTrackField.setText("0");
        audioTrackField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                audioTrackFieldFocusLost(evt);
            }
        });

        audioTrackLabel.setText("Audio track:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(languageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filenameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instructionsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(satelliteLabel)
                    .addComponent(houstonLabel)
                    .addComponent(solutionLabel)
                    .addComponent(helpfileLabel)
                    .addComponent(audioTrackLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(instructionsField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(languageSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(languageLetter, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(languageTitle))
                        .addComponent(filenameField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(satelliteField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadingField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solutionField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(helpfileField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(audioTrackField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(455, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filenameLabel)
                    .addComponent(filenameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(languageLabel)
                    .addComponent(languageSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(languageLetter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(languageTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(instructionsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(instructionsLabel))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(satelliteField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(satelliteLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loadingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(houstonLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(solutionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solutionLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(helpfileField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(helpfileLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(audioTrackField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(audioTrackLabel))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("General", jPanel2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Graphics", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 978, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 484, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Terrain", jPanel4);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Buildings"));

        buildingResearchCenter.setText("Research Center");
        buildingResearchCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingResearchCenterActionPerformed(evt);
            }
        });

        buildingBotFactory.setText("Bot Factory");
        buildingBotFactory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingBotFactoryActionPerformed(evt);
            }
        });

        buildingConverter.setText("Converter");
        buildingConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingConverterActionPerformed(evt);
            }
        });

        buildingRepairCenter.setText("Repair Center");
        buildingRepairCenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingRepairCenterActionPerformed(evt);
            }
        });

        buildingDefenseTower.setText("Defense Tower");
        buildingDefenseTower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingDefenseTowerActionPerformed(evt);
            }
        });

        buildingDerrick.setText("Derrick");
        buildingDerrick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingDerrickActionPerformed(evt);
            }
        });

        buildingNuclearPlant.setText("Nuclear Plant");
        buildingNuclearPlant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingNuclearPlantActionPerformed(evt);
            }
        });

        buildingAutoLab.setText("Auto Lab");
        buildingAutoLab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingAutoLabActionPerformed(evt);
            }
        });

        buildingPowerCaptor.setText("Power Captor");
        buildingPowerCaptor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingPowerCaptorActionPerformed(evt);
            }
        });

        buildingExchangePost.setText("Exchange Post");
        buildingExchangePost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingExchangePostActionPerformed(evt);
            }
        });

        buildingFlatGround.setText("Flat ground");
        buildingFlatGround.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingFlatGroundActionPerformed(evt);
            }
        });

        buildingFlag.setText("Flag");
        buildingFlag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingFlagActionPerformed(evt);
            }
        });

        buildingPowerPlant.setText("Power Plant");
        buildingPowerPlant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingPowerPlantActionPerformed(evt);
            }
        });

        buildingPowerStation.setText("Power Station");
        buildingPowerStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingPowerStationActionPerformed(evt);
            }
        });

        buildingRadarStation.setText("Radar Station");
        buildingRadarStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buildingRadarStationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buildingFlatGround)
                            .addComponent(buildingResearchCenter)
                            .addComponent(buildingBotFactory)
                            .addComponent(buildingRepairCenter)
                            .addComponent(buildingDefenseTower)
                            .addComponent(buildingDerrick)
                            .addComponent(buildingNuclearPlant)
                            .addComponent(buildingExchangePost))
                        .addContainerGap(70, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jSeparator2)
                        .addGap(10, 10, 10))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buildingPowerStation)
                            .addComponent(buildingPowerPlant)
                            .addComponent(buildingFlag)
                            .addComponent(buildingPowerCaptor)
                            .addComponent(buildingAutoLab)
                            .addComponent(buildingConverter)
                            .addComponent(buildingRadarStation))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(buildingResearchCenter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingBotFactory)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingConverter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingPowerStation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingRadarStation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingRepairCenter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingDefenseTower)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingDerrick)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingPowerPlant)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingNuclearPlant)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingAutoLab)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingPowerCaptor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingExchangePost)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingFlatGround)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buildingFlag)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Research"));

        trackerLabel.setText("Tracker:");

        trackerEnabled.setText("enabled");
        trackerEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackerEnabledActionPerformed(evt);
            }
        });

        trackerDone.setText("done");
        trackerDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trackerDoneActionPerformed(evt);
            }
        });

        wingerLabel.setText("Winger:");

        wingerEnabled.setText("enabled");
        wingerEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wingerEnabledActionPerformed(evt);
            }
        });

        wingerDone.setText("done");
        wingerDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wingerDoneActionPerformed(evt);
            }
        });

        thumperEnabled.setText("enabled");
        thumperEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thumperEnabledActionPerformed(evt);
            }
        });

        shooterEnabled.setText("enabled");
        shooterEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shooterEnabledActionPerformed(evt);
            }
        });

        towerEnabled.setText("enabled");
        towerEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                towerEnabledActionPerformed(evt);
            }
        });

        phazerEnabled.setText("enabled");
        phazerEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phazerEnabledActionPerformed(evt);
            }
        });

        shielderEnabled.setText("enabled");
        shielderEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shielderEnabledActionPerformed(evt);
            }
        });

        thumperDone.setText("done");
        thumperDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thumperDoneActionPerformed(evt);
            }
        });

        shooterDone.setText("done");
        shooterDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shooterDoneActionPerformed(evt);
            }
        });

        thumperLabel.setText("Thumper:");

        shooterLabel.setText("Shooter:");

        towerLabel.setText("Tower:");

        towerDone.setText("done");
        towerDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                towerDoneActionPerformed(evt);
            }
        });

        phazerDone.setText("done");
        phazerDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phazerDoneActionPerformed(evt);
            }
        });

        shielderDone.setText("done");
        shielderDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shielderDoneActionPerformed(evt);
            }
        });

        phazerLabel.setText("Phazer:");

        shielderLabel.setText("Shielder:");

        nuclearEnabled.setText("enabled");
        nuclearEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuclearEnabledActionPerformed(evt);
            }
        });

        nuclearDone.setText("done");
        nuclearDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuclearDoneActionPerformed(evt);
            }
        });

        nuclearLabel.setText("Nuclear:");

        leggerLabel.setText("Legger:");

        leggerEnabled.setText("enabled");
        leggerEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leggerEnabledActionPerformed(evt);
            }
        });

        leggerDone.setText("done");
        leggerDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leggerDoneActionPerformed(evt);
            }
        });

        orgaLabel.setText("Orga shooter:");

        orgaEnabled.setText("enabled");
        orgaEnabled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgaEnabledActionPerformed(evt);
            }
        });

        orgaDone.setText("done");
        orgaDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orgaDoneActionPerformed(evt);
            }
        });

        recyclerLabel.setText("Recycler:");

        recyclerDone.setText("done");
        recyclerDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recyclerDoneActionPerformed(evt);
            }
        });

        subberLabel.setText("Subber:");

        snifferLabel.setText("Sniffer:");

        subberDone.setText("done");
        subberDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subberDoneActionPerformed(evt);
            }
        });

        snifferDone.setText("done");
        snifferDone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snifferDoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(wingerLabel))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(trackerLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(thumperLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(shooterLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(towerLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(phazerLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(shielderLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(nuclearLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(thumperEnabled)
                        .addGap(18, 18, 18)
                        .addComponent(thumperDone))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(trackerEnabled)
                        .addGap(18, 18, 18)
                        .addComponent(trackerDone))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(wingerEnabled)
                        .addGap(18, 18, 18)
                        .addComponent(wingerDone))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(shooterEnabled)
                        .addGap(18, 18, 18)
                        .addComponent(shooterDone))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(towerEnabled)
                        .addGap(18, 18, 18)
                        .addComponent(towerDone))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(phazerEnabled)
                        .addGap(18, 18, 18)
                        .addComponent(phazerDone))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(shielderEnabled)
                        .addGap(18, 18, 18)
                        .addComponent(shielderDone))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(nuclearEnabled)
                        .addGap(18, 18, 18)
                        .addComponent(nuclearDone)))
                .addContainerGap(10, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(orgaLabel)
                    .addComponent(leggerLabel)
                    .addComponent(recyclerLabel)
                    .addComponent(subberLabel)
                    .addComponent(snifferLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(leggerEnabled)
                        .addGap(18, 18, 18)
                        .addComponent(leggerDone))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(orgaEnabled)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(recyclerDone)
                            .addComponent(orgaDone)
                            .addComponent(subberDone)
                            .addComponent(snifferDone))))
                .addGap(10, 10, 10))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(trackerLabel)
                    .addComponent(trackerEnabled)
                    .addComponent(trackerDone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(wingerLabel)
                    .addComponent(wingerEnabled)
                    .addComponent(wingerDone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(thumperEnabled)
                    .addComponent(thumperDone)
                    .addComponent(thumperLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shooterEnabled)
                    .addComponent(shooterDone)
                    .addComponent(shooterLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(towerEnabled)
                    .addComponent(towerLabel)
                    .addComponent(towerDone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phazerEnabled)
                    .addComponent(phazerDone)
                    .addComponent(phazerLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(shielderEnabled)
                    .addComponent(shielderDone)
                    .addComponent(shielderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuclearEnabled)
                    .addComponent(nuclearDone)
                    .addComponent(nuclearLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leggerLabel)
                    .addComponent(leggerEnabled)
                    .addComponent(leggerDone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orgaLabel)
                    .addComponent(orgaEnabled)
                    .addComponent(orgaDone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(recyclerLabel)
                    .addComponent(recyclerDone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subberLabel)
                    .addComponent(subberDone))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(snifferLabel)
                    .addComponent(snifferDone))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(532, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Buildings and Research", jPanel12);

        jMenu1.setText("File");

        jMenuItem1.setText("New");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Open");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Save");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Save as...");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem7.setText("Close");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem7);
        jMenu1.add(jSeparator1);

        jMenuItem5.setText("Exit");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem9.setText("Import objects");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem9);

        jMenuItem8.setText("Export objects");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem8);
        jMenu2.add(jSeparator3);

        jMenuItem6.setText("Load relief");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void update()
    {
        loadGeneralInfo();
        loadResearchInfo();
        
        objectEditorPanel.update();
    }
    
    private void loadGeneralInfo()
    {
        // load file name path
        if(file == null)
            filenameField.setText(null);
        else
            filenameField.setText(file.getName());
        
        if(map == null) return;
        
        // load language info from map
        loadLanguageInfo();
        
        GeneralInfo gi = map.getGeneralInfo();
        
        // load instructions
        instructionsField.setText(gi.getInstructions());
        
        // load satellite info
        satelliteField.setText(gi.getSatellite());
        
        // load Houston programs
        loadingField.setText(gi.getLoadingFile());
        
        // load solution file
        solutionField.setText(gi.getSolutionFile());
        
        // load CBot manual file
        helpfileField.setText(gi.getHelpFile());
    }
    
    private void loadLanguageInfo()
    {
        int index = languageSelection.getSelectedIndex();
        
        GeneralInfo gi = map.getGeneralInfo();
        Language language = gi.getLanguage(index);
        
        char c = language.getLetter();
        String letter = c > 0 ? Character.toString(c) : "";
        String title = language.getTitle();
        String description = language.getDescription();
        
        languageLetter.setText(letter);
        languageTitle.setText(title);
        languageDescription.setText(description);
    }
    
    // research info
    private void loadResearchInfo()
    {
        if(map == null) return;
        
        ResearchInfo info = map.getResearchInfo();
        
        // enabled buildings
        buildingResearchCenter.setSelected(info.isBuildingEnabled(Building.ResearchCenter));
        buildingBotFactory.setSelected(info.isBuildingEnabled(Building.BotFactory));
        buildingConverter.setSelected(info.isBuildingEnabled(Building.Converter));
        buildingPowerStation.setSelected(info.isBuildingEnabled(Building.PowerStation));
        buildingRadarStation.setSelected(info.isBuildingEnabled(Building.RadarStation));
        buildingRepairCenter.setSelected(info.isBuildingEnabled(Building.RepairCenter));
        buildingDefenseTower.setSelected(info.isBuildingEnabled(Building.DefenseTower));
        buildingPowerPlant.setSelected(info.isBuildingEnabled(Building.PowerPlant));
        buildingDerrick.setSelected(info.isBuildingEnabled(Building.Derrick));
        buildingNuclearPlant.setSelected(info.isBuildingEnabled(Building.NuclearPlant));
        buildingAutoLab.setSelected(info.isBuildingEnabled(Building.AutoLab));
        buildingPowerCaptor.setSelected(info.isBuildingEnabled(Building.PowerCaptor));
        buildingExchangePost.setSelected(info.isBuildingEnabled(Building.ExchangePost));
        buildingFlatGround.setSelected(info.isBuildingEnabled(Building.FlatGround));
        buildingFlag.setSelected(info.isBuildingEnabled(Building.Flag));
        
        // enabled research
        trackerEnabled.setSelected(info.isResearchEnabled(Research.TRACKER));
        wingerEnabled.setSelected(info.isResearchEnabled(Research.WINGER));
        thumperEnabled.setSelected(info.isResearchEnabled(Research.THUMPER));
        shooterEnabled.setSelected(info.isResearchEnabled(Research.SHOOTER));
        towerEnabled.setSelected(info.isResearchEnabled(Research.TOWER));
        phazerEnabled.setSelected(info.isResearchEnabled(Research.PHAZER));
        shielderEnabled.setSelected(info.isResearchEnabled(Research.SHIELDER));
        nuclearEnabled.setSelected(info.isResearchEnabled(Research.ATOMIC));
        leggerEnabled.setSelected(info.isResearchEnabled(Research.iPAW));
        orgaEnabled.setSelected(info.isResearchEnabled(Research.iGUN));
        
        // done research
        trackerDone.setSelected(info.isResearchDone(Research.TRACKER));
        wingerDone.setSelected(info.isResearchDone(Research.WINGER));
        thumperDone.setSelected(info.isResearchDone(Research.THUMPER));
        shooterDone.setSelected(info.isResearchDone(Research.SHOOTER));
        towerDone.setSelected(info.isResearchDone(Research.TOWER));
        phazerDone.setSelected(info.isResearchDone(Research.PHAZER));
        shielderDone.setSelected(info.isResearchDone(Research.SHIELDER));
        nuclearDone.setSelected(info.isResearchDone(Research.ATOMIC));
        leggerDone.setSelected(info.isResearchDone(Research.iPAW));
        orgaDone.setSelected(info.isResearchDone(Research.iGUN));
        recyclerDone.setSelected(info.isResearchDone(Research.RECYCLER));
        subberDone.setSelected(info.isResearchDone(Research.SUBBER));
        snifferDone.setSelected(info.isResearchDone(Research.SNIFFER));
    }
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // File->Open
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        if(result != JFileChooser.APPROVE_OPTION) return;
        
        Map newMap = new Map();
        
        MapImporter importer = MapImporter.getInstance("original");
        File newFile = fileChooser.getSelectedFile();
        
        try(BufferedReader reader = new BufferedReader(new FileReader(newFile)))
        {
            importer.importMap(reader, newMap);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error loading map");
            return;
        }
        
        map = newMap;
        file = newFile;
        
        languageSelection.setSelectedIndex(0);
        update();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // File->New
        map = new Map();
        
        languageSelection.setSelectedIndex(0);
        update();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // File->Save
        saveAs(file);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // File->Save as...
        saveAs(null);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    // save / save as
    private void saveAs(File file)
    {
        if(map == null) return;
        
        if(file == null)
        {
            JFileChooser fileChooser = new JFileChooser();
            int result = fileChooser.showSaveDialog(this);
            if(result != JFileChooser.APPROVE_OPTION) return;
            
            file = fileChooser.getSelectedFile();
        }
        
        try(BufferedWriter writer = new BufferedWriter(new FileWriter(file)))
        {
            MapExporter exporter = MapExporter.getInstance("original");
            
            exporter.exportMap(writer, map);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error saving file");
        }
    }
    
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // File->Exit
        System.exit(0);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(this);
        if(result != JFileChooser.APPROVE_OPTION) return;
        
        try
        {
            File newFile = fileChooser.getSelectedFile();
            BufferedImage image = ImageIO.read(newFile);
            file = newFile;
            objectEditorPanel.setHeightMap(image);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error loading image file.");
        }
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        if(map == null) return;
        
        file = null;
        map = null;
        objectEditorPanel.update();
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void setBuildingFlag(Building b, JCheckBox c)
    {
        if(map == null) return;
        map.getResearchInfo().setEnabledBuilding(b, c.isSelected());
    }
    
    private void setResearchFlag(Research r, JCheckBox e, JCheckBox d)
    {
        if(map == null) return;
        boolean enabled = e != null ? e.isSelected() : false;
        boolean done = d != null ? d.isSelected() : false;
        map.getResearchInfo().setResearch(r, enabled, done);
    }
    
    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        if(map == null) return;
        
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showSaveDialog(this);
        if(result != JFileChooser.APPROVE_OPTION) return;
            
        File outputFile = fileChooser.getSelectedFile();
        
        try(BufferedWriter writer = new BufferedWriter(new FileWriter(outputFile)))
        {
            MapExporter exporter = MapExporter.getInstance("original");
            
            exporter.exportObjects(writer, map.getObjects());
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error saving file");
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showSaveDialog(this);
        if(result != JFileChooser.APPROVE_OPTION) return;
            
        File inputFile = fileChooser.getSelectedFile();
        
        try(BufferedReader reader = new BufferedReader(new FileReader(inputFile)))
        {
            MapImporter importer = MapImporter.getInstance("original");
            
            if(map == null)
            {
                map = new Map();
                update();
            }
            
            importer.importObjects(reader, map.getObjects());
            objectEditorPanel.update();
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Error importing objects file");
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void snifferDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snifferDoneActionPerformed
        setResearchFlag(Research.SNIFFER, null, snifferDone);
    }//GEN-LAST:event_snifferDoneActionPerformed

    private void subberDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subberDoneActionPerformed
        setResearchFlag(Research.SUBBER, null, subberDone);
    }//GEN-LAST:event_subberDoneActionPerformed

    private void recyclerDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recyclerDoneActionPerformed
        setResearchFlag(Research.RECYCLER, null, recyclerDone);
    }//GEN-LAST:event_recyclerDoneActionPerformed

    private void orgaDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgaDoneActionPerformed
        setResearchFlag(Research.iGUN, orgaEnabled, orgaDone);
    }//GEN-LAST:event_orgaDoneActionPerformed

    private void orgaEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orgaEnabledActionPerformed
        setResearchFlag(Research.iGUN, orgaEnabled, orgaDone);
    }//GEN-LAST:event_orgaEnabledActionPerformed

    private void leggerDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leggerDoneActionPerformed
        setResearchFlag(Research.iPAW, leggerEnabled, leggerDone);
    }//GEN-LAST:event_leggerDoneActionPerformed

    private void leggerEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leggerEnabledActionPerformed
        setResearchFlag(Research.iPAW, leggerEnabled, leggerDone);
    }//GEN-LAST:event_leggerEnabledActionPerformed

    private void nuclearDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuclearDoneActionPerformed
        setResearchFlag(Research.ATOMIC, nuclearEnabled, nuclearDone);
    }//GEN-LAST:event_nuclearDoneActionPerformed

    private void nuclearEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuclearEnabledActionPerformed
        setResearchFlag(Research.ATOMIC, nuclearEnabled, nuclearDone);
    }//GEN-LAST:event_nuclearEnabledActionPerformed

    private void shielderDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shielderDoneActionPerformed
        setResearchFlag(Research.SHIELDER, shielderEnabled, shielderDone);
    }//GEN-LAST:event_shielderDoneActionPerformed

    private void phazerDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phazerDoneActionPerformed
        setResearchFlag(Research.PHAZER, phazerEnabled, phazerDone);
    }//GEN-LAST:event_phazerDoneActionPerformed

    private void towerDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_towerDoneActionPerformed
        setResearchFlag(Research.SHIELDER, shielderEnabled, shielderDone);
    }//GEN-LAST:event_towerDoneActionPerformed

    private void shooterDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shooterDoneActionPerformed
        setResearchFlag(Research.SHOOTER, shooterEnabled, shooterDone);
    }//GEN-LAST:event_shooterDoneActionPerformed

    private void thumperDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thumperDoneActionPerformed
        setResearchFlag(Research.THUMPER, thumperEnabled, thumperDone);
    }//GEN-LAST:event_thumperDoneActionPerformed

    private void shielderEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shielderEnabledActionPerformed
        setResearchFlag(Research.SHIELDER, shielderEnabled, shielderDone);
    }//GEN-LAST:event_shielderEnabledActionPerformed

    private void phazerEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phazerEnabledActionPerformed
        setResearchFlag(Research.PHAZER, phazerEnabled, phazerDone);
    }//GEN-LAST:event_phazerEnabledActionPerformed

    private void towerEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_towerEnabledActionPerformed
        setResearchFlag(Research.SHIELDER, shielderEnabled, shielderDone);
    }//GEN-LAST:event_towerEnabledActionPerformed

    private void shooterEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shooterEnabledActionPerformed
        setResearchFlag(Research.SHOOTER, shooterEnabled, shooterDone);
    }//GEN-LAST:event_shooterEnabledActionPerformed

    private void thumperEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thumperEnabledActionPerformed
        setResearchFlag(Research.THUMPER, thumperEnabled, thumperDone);
    }//GEN-LAST:event_thumperEnabledActionPerformed

    private void wingerDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wingerDoneActionPerformed
        setResearchFlag(Research.WINGER, wingerEnabled, wingerDone);
    }//GEN-LAST:event_wingerDoneActionPerformed

    private void wingerEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wingerEnabledActionPerformed
        setResearchFlag(Research.WINGER, wingerEnabled, wingerDone);
    }//GEN-LAST:event_wingerEnabledActionPerformed

    private void trackerDoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackerDoneActionPerformed
        setResearchFlag(Research.TRACKER, trackerEnabled, trackerDone);
    }//GEN-LAST:event_trackerDoneActionPerformed

    private void trackerEnabledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trackerEnabledActionPerformed
        setResearchFlag(Research.TRACKER, trackerEnabled, trackerDone);
    }//GEN-LAST:event_trackerEnabledActionPerformed

    private void buildingRadarStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingRadarStationActionPerformed
        setBuildingFlag(Building.RadarStation, buildingRadarStation);
    }//GEN-LAST:event_buildingRadarStationActionPerformed

    private void buildingPowerStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingPowerStationActionPerformed
        setBuildingFlag(Building.PowerStation, buildingPowerStation);
    }//GEN-LAST:event_buildingPowerStationActionPerformed

    private void buildingPowerPlantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingPowerPlantActionPerformed
        setBuildingFlag(Building.PowerPlant, buildingPowerPlant);
    }//GEN-LAST:event_buildingPowerPlantActionPerformed

    private void buildingFlagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingFlagActionPerformed
        setBuildingFlag(Building.Flag, buildingFlag);
    }//GEN-LAST:event_buildingFlagActionPerformed

    private void buildingFlatGroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingFlatGroundActionPerformed
        setBuildingFlag(Building.FlatGround, buildingFlatGround);
    }//GEN-LAST:event_buildingFlatGroundActionPerformed

    private void buildingExchangePostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingExchangePostActionPerformed
        setBuildingFlag(Building.ExchangePost, buildingExchangePost);
    }//GEN-LAST:event_buildingExchangePostActionPerformed

    private void buildingPowerCaptorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingPowerCaptorActionPerformed
        setBuildingFlag(Building.PowerCaptor, buildingPowerCaptor);
    }//GEN-LAST:event_buildingPowerCaptorActionPerformed

    private void buildingAutoLabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingAutoLabActionPerformed
        setBuildingFlag(Building.AutoLab, buildingAutoLab);
    }//GEN-LAST:event_buildingAutoLabActionPerformed

    private void buildingNuclearPlantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingNuclearPlantActionPerformed
        setBuildingFlag(Building.NuclearPlant, buildingNuclearPlant);
    }//GEN-LAST:event_buildingNuclearPlantActionPerformed

    private void buildingDerrickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingDerrickActionPerformed
        setBuildingFlag(Building.Derrick, buildingDerrick);
    }//GEN-LAST:event_buildingDerrickActionPerformed

    private void buildingDefenseTowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingDefenseTowerActionPerformed
        setBuildingFlag(Building.DefenseTower, buildingDefenseTower);
    }//GEN-LAST:event_buildingDefenseTowerActionPerformed

    private void buildingRepairCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingRepairCenterActionPerformed
        setBuildingFlag(Building.RepairCenter, buildingRepairCenter);
    }//GEN-LAST:event_buildingRepairCenterActionPerformed

    private void buildingConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingConverterActionPerformed
        setBuildingFlag(Building.Converter, buildingConverter);
    }//GEN-LAST:event_buildingConverterActionPerformed

    private void buildingBotFactoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingBotFactoryActionPerformed
        setBuildingFlag(Building.BotFactory, buildingBotFactory);
    }//GEN-LAST:event_buildingBotFactoryActionPerformed

    private void buildingResearchCenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buildingResearchCenterActionPerformed
        setBuildingFlag(Building.ResearchCenter, buildingResearchCenter);
    }//GEN-LAST:event_buildingResearchCenterActionPerformed

    private void audioTrackFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_audioTrackFieldFocusLost
        if(map == null) return;

        try
        {
            int track = Integer.parseInt(audioTrackField.getText());

            map.getGeneralInfo().setAudioTrack(track);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(this, "Invalid number");
        }
    }//GEN-LAST:event_audioTrackFieldFocusLost

    private void helpfileFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_helpfileFieldFocusLost
        if(map == null) return;

        map.getGeneralInfo().setHelpFile(helpfileField.getText());
    }//GEN-LAST:event_helpfileFieldFocusLost

    private void solutionFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_solutionFieldFocusLost
        if(map == null) return;

        map.getGeneralInfo().setSolutionFile(solutionField.getText());
    }//GEN-LAST:event_solutionFieldFocusLost

    private void loadingFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_loadingFieldFocusLost
        if(map == null) return;

        map.getGeneralInfo().setLoadingFile(loadingField.getText());
    }//GEN-LAST:event_loadingFieldFocusLost

    private void satelliteFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_satelliteFieldFocusLost
        if(map == null) return;

        map.getGeneralInfo().setSatellite(satelliteField.getText());
    }//GEN-LAST:event_satelliteFieldFocusLost

    private void instructionsFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_instructionsFieldFocusLost
        if(map == null) return;

        map.getGeneralInfo().setInstructions(instructionsField.getText());
    }//GEN-LAST:event_instructionsFieldFocusLost

    private void languageDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_languageDescriptionFocusLost
        if(map == null) return;

        int index = languageSelection.getSelectedIndex();
        String title = languageDescription.getText();

        map.getGeneralInfo().getLanguage(index).setDescription(title);
    }//GEN-LAST:event_languageDescriptionFocusLost

    private void languageTitleFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_languageTitleFocusLost
        if(map == null) return;

        int index = languageSelection.getSelectedIndex();
        String title = languageTitle.getText();

        map.getGeneralInfo().getLanguage(index).setTitle(title);
    }//GEN-LAST:event_languageTitleFocusLost

    private void languageSelectionItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_languageSelectionItemStateChanged
        if(map == null) return;

        loadLanguageInfo();
    }//GEN-LAST:event_languageSelectionItemStateChanged

    private void languageLetterFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_languageLetterFocusLost
        if(map == null) return;

        int index = languageSelection.getSelectedIndex();
        String text = languageLetter.getText();
        char letter = text.length() > 0 ? text.charAt(0) : '\0';

        map.getGeneralInfo().getLanguage(index).setLetter(letter);
    }//GEN-LAST:event_languageLetterFocusLost
    
    /**
     * Entry point of Colobot Map Editor
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        
        /* // tries to set system L&F
        try
        {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        }
        catch(Exception e)
        {
            // NOP
        } // */
        
        // deactivated
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } // */
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            @Override
            public void run()
            {
                new MainWindow().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField audioTrackField;
    private javax.swing.JLabel audioTrackLabel;
    private javax.swing.JCheckBox buildingAutoLab;
    private javax.swing.JCheckBox buildingBotFactory;
    private javax.swing.JCheckBox buildingConverter;
    private javax.swing.JCheckBox buildingDefenseTower;
    private javax.swing.JCheckBox buildingDerrick;
    private javax.swing.JCheckBox buildingExchangePost;
    private javax.swing.JCheckBox buildingFlag;
    private javax.swing.JCheckBox buildingFlatGround;
    private javax.swing.JCheckBox buildingNuclearPlant;
    private javax.swing.JCheckBox buildingPowerCaptor;
    private javax.swing.JCheckBox buildingPowerPlant;
    private javax.swing.JCheckBox buildingPowerStation;
    private javax.swing.JCheckBox buildingRadarStation;
    private javax.swing.JCheckBox buildingRepairCenter;
    private javax.swing.JCheckBox buildingResearchCenter;
    private javax.swing.JTextField filenameField;
    private javax.swing.JLabel filenameLabel;
    private javax.swing.JTextField helpfileField;
    private javax.swing.JLabel helpfileLabel;
    private javax.swing.JLabel houstonLabel;
    private javax.swing.JTextField instructionsField;
    private javax.swing.JLabel instructionsLabel;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea languageDescription;
    private javax.swing.JLabel languageLabel;
    private javax.swing.JTextField languageLetter;
    private javax.swing.JComboBox languageSelection;
    private javax.swing.JTextField languageTitle;
    private javax.swing.JCheckBox leggerDone;
    private javax.swing.JCheckBox leggerEnabled;
    private javax.swing.JLabel leggerLabel;
    private javax.swing.JTextField loadingField;
    private javax.swing.JCheckBox nuclearDone;
    private javax.swing.JCheckBox nuclearEnabled;
    private javax.swing.JLabel nuclearLabel;
    private javax.swing.JPanel objectEditorContainer;
    private colobot.editor.ObjectEditorPanel objectEditorPanel;
    private javax.swing.JCheckBox orgaDone;
    private javax.swing.JCheckBox orgaEnabled;
    private javax.swing.JLabel orgaLabel;
    private javax.swing.JCheckBox phazerDone;
    private javax.swing.JCheckBox phazerEnabled;
    private javax.swing.JLabel phazerLabel;
    private javax.swing.JCheckBox recyclerDone;
    private javax.swing.JLabel recyclerLabel;
    private javax.swing.JTextField satelliteField;
    private javax.swing.JLabel satelliteLabel;
    private javax.swing.JCheckBox shielderDone;
    private javax.swing.JCheckBox shielderEnabled;
    private javax.swing.JLabel shielderLabel;
    private javax.swing.JCheckBox shooterDone;
    private javax.swing.JCheckBox shooterEnabled;
    private javax.swing.JLabel shooterLabel;
    private javax.swing.JCheckBox snifferDone;
    private javax.swing.JLabel snifferLabel;
    private javax.swing.JTextField solutionField;
    private javax.swing.JLabel solutionLabel;
    private javax.swing.JCheckBox subberDone;
    private javax.swing.JLabel subberLabel;
    private javax.swing.JCheckBox thumperDone;
    private javax.swing.JCheckBox thumperEnabled;
    private javax.swing.JLabel thumperLabel;
    private javax.swing.JCheckBox towerDone;
    private javax.swing.JCheckBox towerEnabled;
    private javax.swing.JLabel towerLabel;
    private javax.swing.JCheckBox trackerDone;
    private javax.swing.JCheckBox trackerEnabled;
    private javax.swing.JLabel trackerLabel;
    private javax.swing.JCheckBox wingerDone;
    private javax.swing.JCheckBox wingerEnabled;
    private javax.swing.JLabel wingerLabel;
    // End of variables declaration//GEN-END:variables
}
